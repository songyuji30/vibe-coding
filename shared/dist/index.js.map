{"version":3,"sources":["../src/index.ts","../src/types/common.ts","../src/utils/formatters.ts","../src/utils/validators.ts","../src/utils/error-handler.ts","../src/components/common/LoadingSpinner.tsx","../src/components/common/ErrorBoundary.tsx","../src/components/common/PageContainer.tsx"],"sourcesContent":["// Re-export all shared utilities and types\nexport * from './types';\nexport * from './utils';\nexport * from './components';\n","/**\n * Common types used throughout the application\n */\n\n/**\n * Standard API response format\n */\nexport interface ApiResponse<T = unknown> {\n  data?: T;\n  error?: {\n    code: string;\n    message: string;\n    details?: Record<string, unknown>;\n  };\n  meta?: {\n    total?: number;\n    page?: number;\n    limit?: number;\n  };\n}\n\n/**\n * Standard pagination parameters\n */\nexport interface PaginationParams {\n  page?: number;\n  limit?: number;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n}\n\n/**\n * Standard error format\n */\nexport interface AppError extends Error {\n  code: string;\n  statusCode?: number;\n  details?: Record<string, unknown>;\n}\n\n/**\n * Type guard for AppError\n */\nexport function isAppError(error: unknown): error is AppError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'code' in error &&\n    'message' in error\n  );\n}\n","/**\n * Format a date to a human-readable string\n * @param date Date object or ISO date string\n * @returns Formatted date string (e.g., \"2023-05-15 14:30\")\n */\nexport function formatDateTime(date: Date | string): string {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  return d.toISOString().replace('T', ' ').substring(0, 16);\n}\n\n/**\n * Format a duration in milliseconds to a human-readable string\n * @param ms Duration in milliseconds\n * @returns Formatted duration (e.g., \"2h 30m\" or \"1d 5h\")\n */\nexport function formatDuration(ms: number): string {\n  const seconds = Math.floor(ms / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  if (days > 0) {\n    return `${days}d ${hours % 24}h`;\n  }\n  if (hours > 0) {\n    return `${hours}h ${minutes % 60}m`;\n  }\n  if (minutes > 0) {\n    return `${minutes}m ${seconds % 60}s`;\n  }\n  return `${seconds}s`;\n}\n\n/**\n * Truncate text to a maximum length, adding an ellipsis if truncated\n * @param text Text to truncate\n * @param maxLength Maximum length before truncation\n * @returns Truncated text with ellipsis if needed\n */\nexport function truncateText(text: string, maxLength: number): string {\n  if (text.length <= maxLength) return text;\n  return `${text.substring(0, maxLength)}...`;\n}\n\n/**\n * Format a number as a currency string\n * @param amount Amount to format\n * @param currency Currency code (default: 'USD')\n * @returns Formatted currency string (e.g., \"$1,234.56\")\n */\nexport function formatCurrency(amount: number, currency = 'USD'): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n  }).format(amount);\n}\n","/**\n * Check if a value is a valid email address\n * @param email Email address to validate\n * @returns true if the email is valid\n */\nexport function isValidEmail(email: string): boolean {\n  const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return re.test(email);\n}\n\n/**\n * Check if a string is a valid URL\n * @param url URL to validate\n * @returns true if the URL is valid\n */\nexport function isValidUrl(url: string): boolean {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Check if a string is a valid date string (ISO format)\n * @param dateString Date string to validate\n * @returns true if the date string is valid\n */\nexport function isValidDateString(dateString: string): boolean {\n  return !Number.isNaN(new Date(dateString).getTime());\n}\n\n/**\n * Validate a password meets complexity requirements\n * @param password Password to validate\n * @param options Validation options\n * @returns Object with validation result and error message if invalid\n */\nexport function validatePassword(\n  password: string,\n  options: {\n    minLength?: number;\n    requireUppercase?: boolean;\n    requireLowercase?: boolean;\n    requireNumber?: boolean;\n    requireSpecialChar?: boolean;\n  } = {}\n): { isValid: boolean; message?: string } {\n  const {\n    minLength = 8,\n    requireUppercase = true,\n    requireLowercase = true,\n    requireNumber = true,\n    requireSpecialChar = true,\n  } = options;\n\n  if (password.length < minLength) {\n    return {\n      isValid: false,\n      message: `Password must be at least ${minLength} characters long`,\n    };\n  }\n\n  if (requireUppercase && !/[A-Z]/.test(password)) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one uppercase letter',\n    };\n  }\n\n  if (requireLowercase && !/[a-z]/.test(password)) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one lowercase letter',\n    };\n  }\n\n  if (requireNumber && !/\\d/.test(password)) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one number',\n    };\n  }\n\n  if (requireSpecialChar && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one special character',\n    };\n  }\n\n  return { isValid: true };\n}\n","import { AppError } from '../types/common';\n\n/**\n * Create a custom application error\n * @param message Error message\n * @param code Error code\n * @param statusCode HTTP status code\n * @param details Additional error details\n * @returns AppError instance\n */\nexport function createError(\n  message: string,\n  code: string,\n  statusCode = 500,\n  details?: Record<string, unknown>\n): AppError {\n  const error = new Error(message) as AppError;\n  error.code = code;\n  error.statusCode = statusCode;\n  if (details) {\n    error.details = details;\n  }\n  return error;\n}\n\n/**\n * Handle errors in a consistent way\n * @param error Error to handle\n * @param context Additional context for the error\n * @returns Formatted error response\n */\nexport function handleError(\n  error: unknown,\n  context?: Record<string, unknown>\n): { status: number; error: string; code: string; details?: unknown } {\n  console.error('Error occurred:', error, context);\n\n  if (isAppError(error)) {\n    return {\n      status: error.statusCode || 500,\n      error: error.message,\n      code: error.code,\n      details: error.details,\n    };\n  }\n\n  if (error instanceof Error) {\n    return {\n      status: 500,\n      error: error.message || 'Internal Server Error',\n      code: 'INTERNAL_ERROR',\n    };\n  }\n\n  return {\n    status: 500,\n    error: 'An unknown error occurred',\n    code: 'UNKNOWN_ERROR',\n  };\n}\n\n/**\n * Type guard for AppError\n */\nfunction isAppError(error: unknown): error is AppError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'code' in error &&\n    'message' in error\n  );\n}\n","import { Box, Loader, MantineSize } from '@mantine/core';\n\ninterface LoadingSpinnerProps {\n  /** Size of the spinner */\n  size?: MantineSize | number;\n  /** Additional class name */\n  className?: string;\n  /** Whether to center the spinner in its container */\n  center?: boolean;\n  /** Custom color */\n  color?: string;\n}\n\n/**\n * A reusable loading spinner component\n */\nexport function LoadingSpinner({\n  size = 'md',\n  className = '',\n  center = true,\n  color,\n}: LoadingSpinnerProps) {\n  const spinner = <Loader size={size} color={color} />;\n\n  if (center) {\n    return (\n      <Box className={`flex items-center justify-center p-4 ${className}`}>\n        {spinner}\n      </Box>\n    );\n  }\n\n  return spinner;\n}\n","import { Component, ErrorInfo, ReactNode } from 'react';\nimport { Alert, Box, Button, Text, Title } from '@mantine/core';\nimport { IconAlertCircle } from '@tabler/icons-react';\n\ninterface ErrorBoundaryProps {\n  /** Fallback UI to show when an error occurs */\n  fallback?: ReactNode;\n  /** Callback when an error occurs */\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n  /** Children to render normally when there's no error */\n  children: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n}\n\n/**\n * A reusable error boundary component that catches JavaScript errors in its child component tree,\n * logs those errors, and displays a fallback UI.\n */\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    // Update state so the next render will show the fallback UI\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // Log the error to an error reporting service\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\n    \n    // Call the onError callback if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n  }\n\n  handleReset = (): void => {\n    this.setState({ hasError: false, error: null });\n  };\n\n  render(): ReactNode {\n    if (this.state.hasError) {\n      // Render the custom fallback UI if provided\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      // Default error UI\n      return (\n        <Box p=\"md\" maw={800} mx=\"auto\">\n          <Alert\n            icon={<IconAlertCircle size=\"1rem\" />}\n            title=\"Something went wrong\"\n            color=\"red\"\n            variant=\"outline\"\n            mb=\"md\"\n          >\n            <Text mb=\"md\">\n              {this.state.error?.message || 'An unexpected error occurred'}\n            </Text>\n            <Button color=\"red\" onClick={this.handleReset}>\n              Try again\n            </Button>\n          </Alert>\n        </Box>\n      );\n    }\n\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n","import { ReactNode } from 'react';\nimport { Box, BoxProps, MantineNumberSize, useMantineTheme } from '@mantine/core';\n\ninterface PageContainerProps extends BoxProps {\n  /** Content of the page */\n  children: ReactNode;\n  /** Maximum width of the container */\n  maxWidth?: MantineNumberSize | number | string;\n  /** Whether to add top padding */\n  withTopPadding?: boolean;\n  /** Whether to add bottom padding */\n  withBottomPadding?: boolean;\n  /** Additional class name */\n  className?: string;\n}\n\n/**\n * A container component that provides consistent page layout\n */\nexport function PageContainer({\n  children,\n  maxWidth = 'xl',\n  withTopPadding = true,\n  withBottomPadding = true,\n  className = '',\n  ...rest\n}: PageContainerProps) {\n  const theme = useMantineTheme();\n  \n  return (\n    <Box\n      className={`w-full mx-auto px-4 sm:px-6 lg:px-8 ${\n        withTopPadding ? 'pt-8' : ''\n      } ${withBottomPadding ? 'pb-12' : ''} ${className}`}\n      style={{\n        maxWidth: typeof maxWidth === 'string' && theme.breakpoints[maxWidth as keyof typeof theme.breakpoints] \n          ? theme.breakpoints[maxWidth as keyof typeof theme.breakpoints] \n          : maxWidth,\n      }}\n      {...rest}\n    >\n      {children}\n    </Box>\n  );\n}\n"],"mappings":"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","names":["isAppError","import_core","import_jsx_runtime","import_core","import_jsx_runtime"]}